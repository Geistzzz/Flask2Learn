1、python的所有数据类型都是存在堆上的，因为python的数据类型不是静态类型
每次修改变量的时候，都会开辟一个新的地址来存储数据，这就导致了python的开销很大
而且运行速度奇慢
2、python是解释型语言，根本没有编译优化，可以想象这么一个场景，python有一个很长的列表
它的指针整整齐齐躺在在栈里，栈说，我已经不保存数据了，但我知道数据在哪里，你直接去顺着地址找他们
就可以了，可能栈中连续的地址存储的头尾间隔堆中的数据，
你会看到这么衣服景象，栈中的数据，优雅，整齐，富有美感，而堆中的数据确实杂乱无章，其实在这里你也可以看到
阶级分化，栈中有序性的代价是以牺牲堆中数据的有序性为前提的
3、其实别的静态语言也会让一些数据类型呆在栈中，比如rust，他会让基本数据类型都呆在栈中，
到了python这里，它就一脚把基本数据类型像扫垃圾一样全都扫到栈中，它在说，我要保持我的本真性，脏东西
都请别打扰我，过分保持自己的纯洁性是法西斯的根源，因为为什么怕数据待在栈中，因为它怕，怕内存溢出，内存溢出就是风险，
这就是矛盾，矛盾的进一步发展
就是，为了一劳永逸的解决这些，它就一脚把基本数据类型像扫垃圾一样全都扫到栈中,
python的基本数据类型都是不可变数据类型，复合数据类型的指针全都给我指到堆上，
python的政治光谱是极端自由化的，偏向于无政府主义，自由化就没有力量，胜任不了大型醒目，但是他的地位就像胶水一样，
虽然胜任不了大型项目，但是可以充当大型项目的项目的粘合，
写python语言确实优雅，但是都是有代价的，代价就是性能低